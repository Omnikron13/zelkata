name: Build & deploy Manual to GitHub Pages
on:
  workflow_dispatch:

  push:
    branches:
      - main

env:
  font: SpaceMono
  version: v3.2.1

jobs:
  ## Fetch/process/cache fonts ##
  get_fonts:
    name: Fetch & Process NerdFonts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            docs/assets/fonts/${{env.font}}NerdFont
            docs/assets/fonts/default-font.css
          key: "${{env.font}}-${{env.version}}"

      - name: Checkout processing script
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docs/scripts/gen_nerdfont_css.py
            docs/assets/fonts/

      - name: Setup Python
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Download, unpack, and process NerdFonts
        if: steps.cache.outputs.cache-hit != 'true'
        id: process_fonts
        run: |
           python nerdfontweb.py --version ${{env.version}} --gen-default --mkdocs ${{env.font}}
           ls
           ls docs
           ls docs/assets
           ls docs/assets/fonts


  ## Build job ##
  build:
    name: Build manual pages
    needs: get_fonts
    runs-on: ubuntu-latest
    steps:
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            docs

      - uses: actions/cache/restore@v4
        with:
          path: |
            docs/assets/fonts/${{env.font}}NerdFont
            docs/assets/fonts/default-font.css
          key: "${{env.font}}-${{env.version}}"

      - name: Setup Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install python modules
        run: pip install -r docs/requirements.txt

      - name: Generate site files
        run: mkdocs build

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: "site/"
  
  ## Deploy job ##
  deploy:
    name: Deploy manual pages
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5

